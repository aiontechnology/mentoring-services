# Copyright 2024 Aion Technology LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build and Deploy to ECR

on:
  push:
    branches:
      - '**'
      - '!master'

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle
      run: |
        openssl aes-256-cbc -pass pass:${{ secrets.OPENSSL_PWD }} -in secring.gpg.enc -out ${{ runner.temp }}/secring.gpg -d -md sha256
        gradle -Psigning.keyId=${{ vars.GPG_KEY }} -Psigning.password=${{ secrets.GPG_PWD }} -Psigning.secretKeyRingFile=${{ runner.temp }}/secring.gpg build

    - name: Publish to Maven Central
      run: |
        openssl aes-256-cbc -pass pass:${{ secrets.OPENSSL_PWD }} -in secring.gpg.enc -out ${{ runner.temp }}/secring.gpg -d -md sha256
        gradle -Psigning.keyId=${{ vars.GPG_KEY }} -Psigning.password=${{ secrets.GPG_PWD }} -Psigning.secretKeyRingFile=${{ runner.temp }}/secring.gpg publish
      env:
        OSSRH_USERNAME: ${{ vars.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to ECR
      run: |
        aws ecr get-login-password | docker login --username AWS --password-stdin ${{ vars.ECR_KEY }}

    - name: Calculate Docker Tag
      run: |
        echo "DOCKER_TAG=${{ github.ref_name }}-build.${{ github.run_number }}" >> "$GITHUB_ENV"

    - name: Build Docker Container
      run: |
        cd server
        docker build -t services:${{ env.DOCKER_TAG }} .
        docker tag services:${{ env.DOCKER_TAG }} ${{ vars.ECR_KEY}}:latest
        docker tag services:${{ env.DOCKER_TAG }} ${{ vars.ECR_KEY}}:test
        docker tag services:${{ env.DOCKER_TAG }} ${{ vars.ECR_KEY}}:prod
        docker tag services:${{ env.DOCKER_TAG }} ${{ vars.ECR_KEY}}:${{ env.DOCKER_TAG }}

    - name: Push Container to ECR
      run: |
        docker push ${{ vars.ECR_KEY }}:latest
        docker push ${{ vars.ECR_KEY }}:test
        docker push ${{ vars.ECR_KEY }}:prod
        docker push ${{ vars.ECR_KEY }}:${{ env.DOCKER_TAG }}
