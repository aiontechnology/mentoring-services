<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2023 Aion Technology LLC
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:flowable="http://flowable.org/bpmn"
             typeLanguage="http://www.w3.org/2001/XMLSchema"
             expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://www.flowable.org/processdef">
    <process id="student-registration" name="Student Registration" isExecutable="true">
        <documentation>MentorSuccess student registration process</documentation>

        <!-- States -->

        <startEvent id="start" flowable:initiator="initiator" flowable:formFieldValidation="true">
            <documentation>
                Start the process which invites a parent to register their student into the MentorSuccess program.
            </documentation>
        </startEvent>

        <callActivity id="sendInvitation1"
                      name="Send Invitation 1"
                      calledElement="invite-student">
            <extensionElements>
                <flowable:in source="school" target="school"/>
                <flowable:in source="programAdmin" target="programAdmin"/>
                <flowable:in source="invitation" target="invitation"/>
                <flowable:in source="email" target="email"/>
                <flowable:out source="schoolId" target="schoolId"/>
                <flowable:out source="registration" target="registration"/>
                <flowable:out source="student" target="student"/>
            </extensionElements>
        </callActivity>

        <callActivity id="receiveRegistration1"
                      name="Receive Registration 1"
                      calledElement="register-and-notify">
            <extensionElements>
                <flowable:in source="schoolId" target="schoolId"/>
                <flowable:in source="student" target="student"/>
                <flowable:in source="registration" target="registration"/>
                <flowable:in source="invitation" target="invitation"/>
                <flowable:in source="programAdmin" target="programAdmin"/>
                <flowable:in source="email" target="email"/>
            </extensionElements>
        </callActivity>

        <boundaryEvent id="sendInvitation1Timeout"
                       attachedToRef="sendInvitation1">
            <documentation>
                Boundary event on the "receive registration" task that will route the process if the parent has not
                responded within a seven-day timeframe.
            </documentation>
            <timerEventDefinition>
                <timeDuration>${email.timeout}</timeDuration>
            </timerEventDefinition>
        </boundaryEvent>

        <callActivity id="sendInvitation2"
                      name="Send Invitation 2"
                      calledElement="invite-student">
            <extensionElements>
                <flowable:in source="school" target="school"/>
                <flowable:in source="programAdmin" target="programAdmin"/>
                <flowable:in source="invitation" target="invitation"/>
                <flowable:in source="email" target="email"/>
                <flowable:out source="schoolId" target="schoolId"/>
                <flowable:out source="registration" target="registration"/>
                <flowable:out source="student" target="student"/>
            </extensionElements>
        </callActivity>

        <callActivity id="receiveRegistration2"
                      name="Receive Registration 2"
                      calledElement="register-and-notify">
            <extensionElements>
                <flowable:in source="schoolId" target="schoolId"/>
                <flowable:in source="student" target="student"/>
                <flowable:in source="registration" target="registration"/>
                <flowable:in source="invitation" target="invitation"/>
                <flowable:in source="programAdmin" target="programAdmin"/>
                <flowable:in source="email" target="email"/>
            </extensionElements>
        </callActivity>

        <boundaryEvent id="sendInvitation2Timeout"
                       attachedToRef="sendInvitation2">
            <documentation>
                Boundary even on the "remind parent" task that will route the process if the parent has not responded
                within a seven-day timeframe.
            </documentation>
            <timerEventDefinition>
                <timeDuration>${email.timeout}</timeDuration>
            </timerEventDefinition>
        </boundaryEvent>

        <serviceTask id="generateRegistrationTimeoutEmail"
                     name="Generate Parent Registration Timeout Email"
                     flowable:delegateExpression="${invitationEmailGeneratorTimeout}">
            <documentation>
                Generate an email to inform the program administrator that a student registration workflow has timed out
            </documentation>
        </serviceTask>

        <serviceTask id="sendRegistrationTimeoutEmail"
                     name="Send Timeout Email"
                     flowable:type="mail">
            <documentation>
                Send a notification to the program administrator that a registration has timed out
            </documentation>
            <extensionElements>
                <flowable:field name="to">
                    <flowable:expression><![CDATA[${programAdmin.email}]]></flowable:expression>
                </flowable:field>
                <flowable:field name="from" stringValue="do-not-reply@mentorsuccesskids.com"/>
                <flowable:field name="subject">
                    <flowable:expression>
                        <![CDATA[Registration timed out for ${invitation.studentFirstName} ${invitation.studentLastName}]]>
                    </flowable:expression>
                </flowable:field>
                <flowable:field name="html">
                    <flowable:expression><![CDATA[${email.body}]]></flowable:expression>
                </flowable:field>
            </extensionElements>
        </serviceTask>

        <endEvent id="end">
            <documentation>
                The process is complete
            </documentation>
        </endEvent>

        <!-- Transitions -->

        <sequenceFlow sourceRef="start" targetRef="sendInvitation1"/>
        <sequenceFlow sourceRef="sendInvitation1" targetRef="receiveRegistration1"/>
        <sequenceFlow sourceRef="sendInvitation1Timeout" targetRef="sendInvitation2"/>
        <sequenceFlow sourceRef="receiveRegistration1" targetRef="end"/>
        <sequenceFlow sourceRef="sendInvitation2" targetRef="receiveRegistration2"/>
        <sequenceFlow sourceRef="sendInvitation2Timeout" targetRef="generateRegistrationTimeoutEmail"/>
        <sequenceFlow sourceRef="receiveRegistration2" targetRef="end"/>
        <sequenceFlow sourceRef="generateRegistrationTimeoutEmail" targetRef="sendRegistrationTimeoutEmail"/>
        <sequenceFlow sourceRef="sendRegistrationTimeoutEmail" targetRef="end"/>
    </process>
</definitions>